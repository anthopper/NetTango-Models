{"spaces":[{"id":0,"spaceId":"ntb-defs-0","name":"Particle Commands","width":600,"height":800,"defs":{"version":3,"height":800,"width":600,"blockStyles":{"starterBlockStyle":{"blockColor":"#bb5555","textColor":"#ffffff","borderColor":"#ffffff","fontWeight":"","fontSize":"","fontFace":""},"containerBlockStyle":{"blockColor":"#8899aa","textColor":"#ffffff","borderColor":"#ffffff","fontWeight":"","fontSize":"","fontFace":""},"commandBlockStyle":{"blockColor":"#9977aa","textColor":"#ffffff","borderColor":"#ffffff","fontWeight":"","fontSize":"","fontFace":""}},"blocks":[{"action":"act","format":"to act","required":true,"limit":1,"blockColor":"#bb5555","textColor":"#ffffff","borderColor":"#000000","fontWeight":400,"fontSize":12,"fontFace":"'Poppins', sans-serif","type":"nlogo:procedure","start":true,"control":false,"clauses":null,"params":[],"properties":[],"id":0},{"action":" ‚ñ∂Ô∏è move","format":"move","required":false,"blockColor":"#9977aa","textColor":"#ffffff","borderColor":"#000000","fontWeight":400,"fontSize":12,"fontFace":"'Poppins', sans-serif","type":"nlogo:command","start":false,"control":false,"clauses":null,"params":[],"properties":[],"id":1},{"action":"üí•check for particle-contact","format":"  if count other particles-here  in-radius 1 = 1 [         set candidate one-of other particles-here with [ who < [ who ] of myself and myself != last-collision ] ]      if (candidate != nobody) and (speed > 0 or [ speed ] of candidate > 0)","required":false,"blockColor":"#8899aa","textColor":"#ffffff","borderColor":"#000000","fontWeight":400,"fontSize":12,"fontFace":"'Poppins', sans-serif","id":2,"type":"nlogo:if","start":false,"control":true,"clauses":[],"params":[],"properties":[]},{"action":"üé±change speed and direction","format":"if candidate != nobody [collide-with candidate]","required":false,"blockColor":"#9977aa","textColor":"#ffffff","borderColor":"#000000","fontWeight":400,"fontSize":12,"fontFace":"'Poppins', sans-serif","type":"nlogo:command","start":false,"control":false,"clauses":null,"params":[],"properties":[],"id":4},{"action":"‚óÄÔ∏èreverse","format":"set heading heading + 180 ask candidate [set heading heading + 180]","required":false,"blockColor":"#9977aa","textColor":"#ffffff","borderColor":"#000000","fontWeight":400,"fontSize":12,"fontFace":"'Poppins', sans-serif","type":"nlogo:command","start":false,"control":false,"clauses":null,"params":[],"properties":[],"id":5},{"action":"align direction","format":"set heading [heading] of candidate ","required":false,"blockColor":"#9977aa","textColor":"#ffffff","borderColor":"#000000","fontWeight":400,"fontSize":12,"fontFace":"'Poppins', sans-serif","type":"nlogo:command","start":false,"control":false,"clauses":null,"params":[],"properties":[],"id":13},{"action":"üé≤chance","format":"if random 100 < {0}","required":false,"blockColor":"#8899aa","textColor":"#ffffff","borderColor":"#000000","fontWeight":400,"fontSize":12,"fontFace":"'Poppins', sans-serif","type":"nlogo:if","start":false,"control":true,"clauses":[],"params":[{"name":"percent","unit":"%","type":"range","default":20,"min":0,"max":100,"step":0.5,"id":0}],"properties":[],"id":6},{"action":"Draw Line","format":"pd","required":false,"blockColor":"#9977aa","textColor":"#ffffff","borderColor":"#000000","fontWeight":400,"fontSize":12,"fontFace":"'Poppins', sans-serif","type":"nlogo:command","start":false,"control":false,"clauses":null,"params":[],"properties":[],"id":7},{"action":"stop drawing line","format":"pu","required":false,"blockColor":"#9977aa","textColor":"#ffffff","borderColor":"#000000","fontWeight":400,"fontSize":12,"fontFace":"'Poppins', sans-serif","type":"nlogo:command","start":false,"control":false,"clauses":null,"params":[],"properties":[],"id":8},{"action":"erase line","format":"pen-erase","required":false,"blockColor":"#9977aa","textColor":"#ffffff","borderColor":"#000000","fontWeight":400,"fontSize":12,"fontFace":"'Poppins', sans-serif","type":"nlogo:command","start":false,"control":false,"clauses":null,"params":[],"properties":[],"id":9},{"action":"Set speed","format":"setspeed {P0}","required":false,"blockColor":"#9977aa","textColor":"#ffffff","borderColor":"#000000","fontWeight":400,"fontSize":12,"fontFace":"'Poppins', sans-serif","type":"nlogo:command","start":false,"control":false,"clauses":null,"params":[],"properties":[{"name":"speed","unit":"","type":"select","default":"\"slower\"","values":[{"actual":"\"stop\""},{"actual":"\"same as other\""},{"actual":"\"faster\""},{"actual":"\"slower\""}],"id":1}],"id":10},{"action":"Set direction","format":"fd setdirection {P0}","required":false,"blockColor":"#9977aa","textColor":"#ffffff","borderColor":"#000000","fontWeight":400,"fontSize":12,"fontFace":"'Poppins', sans-serif","type":"nlogo:command","start":false,"control":false,"clauses":null,"params":[],"properties":[{"name":"direction","unit":"","type":"select","default":"\"slower\"","values":[{"actual":"\"backwards\""},{"actual":"\"same as other\""},{"actual":"\"random\""}],"id":2}],"id":11},{"action":"stick","format":"if candidate != nobody [stick-with candidate]","required":false,"blockColor":"#9977aa","textColor":"#ffffff","borderColor":"#000000","fontWeight":400,"fontSize":12,"fontFace":"'Poppins', sans-serif","type":"nlogo:command","start":false,"control":false,"clauses":null,"params":[],"properties":[],"id":12},{"action":"setup-spring-particles","format":"setup-nl","required":false,"type":"nlogo:command","start":false,"control":false,"clauses":null,"params":[],"properties":[],"id":14},{"action":"setup","format":"to setup-the-stuff","required":true,"limit":1,"id":15,"type":"nlogo:procedure","start":true,"control":false,"clauses":null,"params":[],"properties":[]},{"action":"setup-billard-particles","format":"setup","required":false,"id":16,"type":"nlogo:command","start":false,"control":false,"clauses":null,"params":[],"properties":[]},{"action":"progate-sound-wave","format":"go-nl","required":false,"type":"nlogo:command","start":false,"control":false,"clauses":null,"params":[],"properties":[],"id":17},{"action":"ask springs","format":"ask atoms","required":false,"type":"nlogo:if","start":false,"control":true,"clauses":[],"params":[],"properties":[],"id":18},{"action":"Spring","format":"to spring","required":true,"limit":1,"type":"nlogo:procedure","start":true,"control":false,"clauses":null,"params":[],"properties":[],"id":19}],"expressions":[{"name":"true","type":"bool"},{"name":"false","type":"bool"},{"name":"AND","type":"bool","arguments":["bool","bool"],"format":"({0} and {1})"},{"name":"OR","type":"bool","arguments":["bool","bool"],"format":"({0} or {1})"},{"name":"NOT","type":"bool","arguments":["bool"],"format":"(not {0})"},{"name":">","type":"bool","arguments":["num","num"]},{"name":">=","type":"bool","arguments":["num","num"]},{"name":"<","type":"bool","arguments":["num","num"]},{"name":"<=","type":"bool","arguments":["num","num"]},{"name":"!=","type":"bool","arguments":["num","num"]},{"name":"=","type":"bool","arguments":["num","num"]},{"name":"+","type":"num","arguments":["num","num"]},{"name":"-","type":"num","arguments":["num","num"]},{"name":"√ó","type":"num","arguments":["num","num"],"format":"({0} * {1})"},{"name":"/","type":"num","arguments":["num","num"]},{"name":"random","type":"num","arguments":["num"],"format":"random-float {0}"}],"program":{"chains":[[{"id":0,"instanceId":19,"action":"act","type":"nlogo:procedure","format":"to act","note":null,"required":true,"x":44,"y":235},{"id":2,"instanceId":45,"action":"üí•check for particle-contact","type":"nlogo:if","format":"  if count other particles-here  in-radius 1 = 1 [         set candidate one-of other particles-here with [ who < [ who ] of myself and myself != last-collision ] ]      if (candidate != nobody) and (speed > 0 or [ speed ] of candidate > 0)","note":null,"required":false,"x":0,"y":0,"children":[{"id":4,"instanceId":47,"action":"üé±change speed and direction","type":"nlogo:command","format":"if candidate != nobody [collide-with candidate]","note":null,"required":false,"x":0,"y":0}]},{"id":1,"instanceId":46,"action":" ‚ñ∂Ô∏è move","type":"nlogo:command","format":"move","note":null,"required":false,"x":235,"y":448}],[{"id":15,"instanceId":20,"action":"setup","type":"nlogo:procedure","format":"to setup-the-stuff","note":null,"required":true,"x":58,"y":55},{"id":16,"instanceId":44,"action":"setup-billard-particles","type":"nlogo:command","format":"setup","note":null,"required":false,"x":0,"y":0},{"id":14,"instanceId":48,"action":"setup-spring-particles","type":"nlogo:command","format":"setup-nl","note":null,"required":false,"x":0,"y":0}],[{"id":19,"instanceId":41,"action":"Spring","type":"nlogo:procedure","format":"to spring","note":null,"required":true,"x":53,"y":444},{"id":17,"instanceId":42,"action":"progate-sound-wave","type":"nlogo:command","format":"go-nl","note":null,"required":false,"x":0,"y":0}]]}},"defsJsonChanged":false,"netLogoCode":"to spring\n  go-nl\nend\n\nto act\n    if count other particles-here  in-radius 1 = 1 [         set candidate one-of other particles-here with [ who < [ who ] of myself and myself != last-collision ] ]      if (candidate != nobody) and (speed > 0 or [ speed ] of candidate > 0)\n  [\n    if candidate != nobody [collide-with candidate]\n  ]\n  move\nend\n\nto setup-the-stuff\n  setup\n  setup-nl\nend","netLogoDisplay":"to spring\n  go-nl\nend\n\nto act\n    if count other particles-here  in-radius 1 = 1 [         set candidate one-of other particles-here with [ who < [ who ] of myself and myself != last-collision ] ]      if (candidate != nobody) and (speed > 0 or [ speed ] of candidate > 0)\n  [\n    if candidate != nobody [collide-with candidate]\n  ]\n  move\nend\n\nto setup-the-stuff\n  setup\n  setup-nl\nend"}],"netTangoToggles":{"workspaceBelow":true,"showCode":true},"tabOptions":{"commandCenterTab":true,"codeTab":true,"infoTab":true,"speedBar":true,"fileButtons":true,"authoring":true,"tabsPosition":true,"poweredBy":false},"blockStyles":{"starterBlockStyle":{"blockColor":"#bb5555","textColor":"#ffffff","borderColor":"#ffffff","fontWeight":"","fontSize":"","fontFace":""},"containerBlockStyle":{"blockColor":"#8899aa","textColor":"#ffffff","borderColor":"#ffffff","fontWeight":"","fontSize":"","fontFace":""},"commandBlockStyle":{"blockColor":"#9977aa","textColor":"#ffffff","borderColor":"#ffffff","fontWeight":"","fontSize":"","fontFace":""}},"title":"Particles Sandbox","extraCss":"","code":"globals [\n  tick-advance-amount               ; how much we advance the tick counter this time through\n  max-tick-advance-amount           ; the largest tick-advance-amount is allowed to be\n  init-avg-speed init-avg-energy    ; initial averages\n  avg-speed avg-energy              ; current average\n  avg-energy-green\n  avg-energy-orange\n  avg-energy-purple\n  particle-size\n  toggle-red-state\n  toggle-green-state\n  min-particle-energy\n  max-particle-energy\n  particles-to-add\n  particlesphysics?\n  \n  membrane-edge-x  ;; horizontal distance from center to edge of membrane\n  membrane-edge-y  ;; vertical distance from center to edge of membrane\n  membrane-center\n  detector-value-1\n  detector-value-2\n  membrane-surface\n  atom-batch-twist\n ; driver-vibration-frequency\n  red-detector-size\n  blue-detector-size\n  length-of-simulation\n ; stength-of-push\n  empty-space\n  #atoms\n  vibrate-particles?\n  dark-friction-in-medium\n  stiffness\n  distance-of-blue-squares-from-sound-source\n  particle-shape\n  friction-in-medium\n  ;particle-size\n  slide-step\n  vibration-amplitude\n  vibration-frequency\n  speaker-on?\n  speaker-visible?\n  particles?\n  hearer?\n]\n\nbreed [ particles particle ]\nbreed [ walls wall ]\nbreed [ flashes flash ]\nbreed [ erasers eraser ]\nbreed [ arrowheads arrowhead ]\n\nbreed [grids grid]\nbreed [arrows arrow]\nbreed [dark-particles dark-particle]\nbreed [boundaries boundary]\nbreed [atoms atom ]\nbreed [detectors detector]\nbreed [graphics-detectors graphic-detector]\n\nerasers-own [ pressure? ]\nflashes-own [ birthday ]\n\nparticles-own [\n  speed mass energy          ; particles info\n  last-collision\n  color-type\n  startcolor\n  collisions\n  collided?\n  candidate\n  particlespeed\n\n]\n\nwalls-own [\n  energy\n  valve-1?\n  valve-2?\n  pressure?\n  surface-energy\n]\n\n\narrows-own [\n  edge?            ;; are we on the edge of the membrane?\n  driver?          ;; are we part of the green driving plate?\n  x                ;; position on x axis in space\n  y                ;; position on y axis in space\n  z                ;; position on z axis in space\n  velocity         ;; velocity along z axis\n  neighbor-particles ;; agentset of particles adjacent to us\n]\n\ndark-particles-own [\n  edge?\n  driver?\n  x                ;; position on x axis in space\n  y                ;; position on y axis in space\n  z                ;; position on z axis in space\n  velocity         ;; velocity along z axis\n  neighbor-particles ;; agentset of particles adjacent to us\n]\n\nboundaries-own [\n  edge?\n  driver?\n  x                ;; position on x axis in space\n  y                ;; position on y axis in space\n  z                ;; position on z axis in space\n  velocity         ;; velocity along z axis\n  neighbor-particles ;; agentset of particles adjacent to us\n]\n\n\npatches-own [detector? detector-number]\n\natoms-own [kind x y offset-distance tracking?]\n\nto setup\n  clear-all\n  reset-ticks\n  set particle-size 1.0\n  set max-tick-advance-amount 0.02\n\n  set particles-to-add 2\n\n  set-default-shape flashes \"square\"\n  set-default-shape walls \"wall\"\n  set-default-shape erasers \"eraser\"\n  set-default-shape arrowheads \"default\"\n\n  set min-particle-energy 0\n  set max-particle-energy 10000  ;(.5 ) * ( max-dist-in-tick-advance-amount  / max-tick-advance-amount ) ^ 2\n\n  create-erasers 1 [\n    set hidden? true\n    set pressure? true\n    set size 3\n    set color white\n  ]\n\n  make-box\n  make-particles\n\n  ask particles [ apply-speed-visualization ]\n\n  set init-avg-speed avg-speed\n  set init-avg-energy avg-energy\n\n  update-variables\n  do-plotting\n  \n  ;ask patches with [pxcor < -11 or pxcor > 11] [set pcolor 82]\nend\n\n\nto go\n  mouse-action\n  ;if mouse-interaction = \"none - let the particles interact\"  [\n\t\tSpring\n    ask particles [ act set last-collision candidate ask candidate [ set last-collision myself ]set candidate nobody  ]\n  \n    ;ask particles [ check-for-collision ]\n    ask particles with [ any? walls-here ] [ rewind-to-bounce ]\n    ask particles with [ any? walls-here ] [ remove-from-walls ]\n  ;]\n\n  tick-advance tick-advance-amount\n  calculate-tick-advance-amount\n\n  ask flashes [ apply-flash-visualization ]\n  ask particles [ apply-speed-visualization ]\n\n  update-variables\n  do-plotting\n  display\nend\n\n\nto update-variables\n  if any? particles [\n    set avg-speed  mean [ speed ] of particles\n    set avg-energy mean [ energy ] of particles\n  ]\n\n  if any? particles with [ color-type = 55 ] [\n    set avg-energy-green mean [ energy ] of particles with [ color-type = 55 ]\n  ]\n  if any? particles with [ color-type = 25 ] [\n    set avg-energy-orange mean [ energy ] of particles with [ color-type = 25 ]\n  ]\n  if any? particles with [ color-type = 115 ] [\n    set avg-energy-purple mean [ energy ] of particles with [ color-type = 115 ]\n  ]\nend\n\n\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;WALL INTERACTION;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n\n\nto toggle-red-wall\n  ifelse toggle-red-state = \"closed\" [\n    ask walls with [ valve-1? ] [\n      set hidden? true\n    ]\n    set toggle-red-state \"open\"\n  ][\n    ask walls with [ valve-1? ] [\n      set hidden? false\n    ]\n    set toggle-red-state \"closed\"\n  ]\nend\n\nto toggle-green-wall\n  ifelse toggle-green-state = \"closed\" [\n    ask walls with [ valve-2? ] [\n      set hidden? true\n    ]\n    set toggle-green-state \"open\"\n  ][\n    ask walls with [ valve-2?] [\n      set hidden? false\n    ]\n    set toggle-green-state \"closed\"\n  ]\nend\n\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAS MOLECULES MOVEMENT;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\nto bounce  ; particles procedure\n  ; get the coordinates of the patch we'll be on if we go forward 1\n  let bounce-patch nobody\n  let bounce-patches nobody\n  let hit-angle 0\n  let this-patch patch-here\n  let new-px 0\n  let new-py 0\n  let visible-wall nobody\n\n  set bounce-patch  min-one-of walls in-cone ((sqrt (2)) / 2) 180 with [ myself != this-patch ] [ distance myself ]\n\n  if bounce-patch != nobody [\n    set new-px [ pxcor ] of bounce-patch\n    set new-py [ pycor ] of bounce-patch\n    set visible-wall walls-on bounce-patch\n\n    if any? visible-wall with [ not hidden? ]  [\n      set hit-angle towards bounce-patch\n      ifelse (hit-angle <= 135 and hit-angle >= 45) or (hit-angle <= 315 and hit-angle >= 225) [\n        set heading (- heading)\n      ][\n        set heading (180 - heading)\n      ]\n      if show-wall-hits? [\n        ask patch new-px new-py [\n          sprout 1 [\n            set breed flashes\n            set color gray - 2\n            set birthday ticks\n          ]\n        ]\n      ]\n    ]\n  ]\nend\n\n\nto rewind-to-bounce  ; particles procedure\n  ; attempts to deal with particle penetration by rewinding the particle path back to a point\n  ; where it is about to hit a wall\n  ; the particle path is reversed 49% of the previous tick-advance-amount it made,\n  ; then particle collision with the wall is detected again.\n  ; and the particle bounces off the wall using the remaining 51% of the tick-advance-amount.\n  ; this use of slightly more of the tick-advance-amount for forward motion off the wall, helps\n  ; insure the particle doesn't get stuck inside the wall on the bounce.\n\n  let bounce-patch nobody\n  let bounce-patches nobody\n  let hit-angle 0\n  let this-patch nobody\n  let new-px 0\n  let new-py 0\n  let visible-wall nobody\n\n  bk (speed) * tick-advance-amount * .49\n  set this-patch  patch-here\n\n  set bounce-patch  min-one-of walls in-cone ((sqrt (2)) / 2) 180 with [ self != this-patch ] [ distance myself ]\n\n  if bounce-patch != nobody [\n\n    set new-px [pxcor] of bounce-patch\n    set new-py [pycor] of bounce-patch\n    set visible-wall walls-on bounce-patch\n\n    if any? visible-wall with [not hidden?] [\n      set hit-angle towards bounce-patch\n\n      ifelse (hit-angle <= 135 and hit-angle >= 45) or (hit-angle <= 315 and hit-angle >= 225) [\n        set heading (- heading)\n      ][\n        set heading (180 - heading)\n      ]\n\n      if show-wall-hits? [\n        ask patch new-px new-py [\n          sprout 1 [\n            set breed flashes\n            set color gray - 2\n            set birthday ticks\n          ]\n        ]\n      ]\n    ]\n  ]\n  fd (speed) * tick-advance-amount * .51\nend\n\nto move  ; particles procedure\n  if patch-ahead (speed * tick-advance-amount) != patch-here [ set last-collision nobody ]\n  jump (speed * tick-advance-amount)\nend\n\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAS MOLECULES COLLISIONS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;from GasLab\n\nto calculate-tick-advance-amount\n  ; tick-advance-amount is calculated in such way that even the fastest\n  ; particles will jump at most 1 patch delta in a ticks tick. As\n  ; particles jump (speed * tick-advance-amount) at every ticks tick, making\n  ; tick delta the inverse of the speed of the fastest particles\n  ; (1/max speed) assures that. Having each particles advance at most\n  ; one patch-delta is necessary for it not to \"jump over\" a wall\n  ; or another particles.\n  ifelse any? particles with [ speed > 0 ] [\n    set tick-advance-amount min list (1 / (ceiling max [speed] of particles )) max-tick-advance-amount\n  ][\n    set tick-advance-amount max-tick-advance-amount\n  ]\nend\n\nto check-for-collision  ; particles procedure\n  ; Here we impose a rule that collisions only take place when there\n  ; are exactly two particles per patch.  We do this because when the\n  ; student introduces new particles from the side, we want them to\n  ; form a uniform wavefront.\n  ;\n  ; Why do we want a uniform wavefront?  Because it is actually more\n  ; realistic.  (And also because the curriculum uses the uniform\n  ; wavefront to help teach the relationship between particles collisions,\n  ; wall hits, and pressure.)\n  ;\n  ; Why is it realistic to assume a uniform wavefront?  Because in reality,\n  ; whether a collision takes place would depend on the actual headings\n  ; of the particles, not merely on their proximity.  Since the particles\n  ; in the wavefront have identical speeds and near-identical headings,\n  ; in reality they would not collide.  So even though the two-particles\n  ; rule is not itself realistic, it produces a realistic result.  Also,\n  ; unless the number of particles is extremely large, it is very rare\n  ; for three or  particles to land on the same patch (for example,\n  ; with 400 particles it happens less than 1% of the time).  So imposing\n  ; this additional rule should have only a negligible effect on the\n  ; aggregate behavior of the system.\n  ;\n  ; Why does this rule produce a uniform wavefront?  The particles all\n  ; start out on the same patch, which means that without the only-two\n  ; rule, they would all start colliding with each other immediately,\n  ; resulting in much random variation of speeds and headings.  With\n  ; the only-two rule, they are prevented from colliding with each other\n  ; until they have spread out a lot.  (And in fact, if you observe\n  ; the wavefront closely, you will see that it is not completely smooth,\n  ; because  collisions eventually do start occurring when it thins out while fanning.)\n  ; the following conditions are imposed on collision candidates:\n    ;   1. they must have a lower who number than my own, because collision\n    ;      code is asymmetrical: it must always happen from the point of view\n    ;      of just one particles.\n    ;   2. they must not be the same particles that we last collided with on\n    ;      this patch, so that we have a chance to leave the patch after we've\n    ;      collided with someone.\n    ;; we also only collide if one of us has non-zero speed. It's useless\n    ;; (and incorrect, actually) for two particles with zero speed to collide.\n  if count other particles-here  in-radius 1 = 1 [\n\n    set candidate one-of other particles-here with [ who < [ who ] of myself and myself != last-collision ]\n\n    if (candidate != nobody) and (speed > 0 or [ speed ] of candidate > 0) [\n      collide-with candidate\n      set last-collision candidate\n      ask candidate [ set last-collision myself ]\n    ]\n  ]\nend\n\n; implements a collision with another particles.\n;\n; THIS IS THE HEART OF THE particles SIMULATION, AND YOU ARE STRONGLY ADVISED\n; NOT TO CHANGE IT UNLESS YOU REALLY UNDERSTAND WHAT YOU'RE DOING!\n;\n; The two particles colliding are self and other-particles, and while the\n; collision is performed from the point of view of self, both particles are\n; modified to reflect its effects. This is somewhat complicated, so I'll\n; give a general outline here:\n;   1. Do initial setup, and determine the heading between particles centers\n;      (call it theta).\n;   2. Convert the representation of the velocity of each particles from\n;      speed/heading to a theta-based vector whose first component is the\n;      particle's speed along theta, and whose second component is the speed\n;      perpendicular to theta.\n;   3. Modify the velocity vectors to reflect the effects of the collision.\n;      This involves:\n;        a. computing the velocity of the center of mass of the whole system\n;           along direction theta\n;        b. updating the along-theta components of the two velocity vectors.\n;   4. Convert from the theta-based vector representation of velocity back to\n;      the usual speed/heading representation for each particles.\n;   5. Perform final cleanup and update derived quantities.\nto collide-with [ other-particles ] ;; particles procedure\n  ; PHASE 1: initial setup\n\n  ; for convenience, grab  quantities from other-particles\n  let mass2 [ mass ] of other-particles\n  let speed2 [ speed ] of other-particles\n  let heading2 [ heading ] of other-particles\n\n\n  ; since particles are modeled as zero-size points, theta isn't meaningfully\n  ; defined. we can assign it randomly without affecting the model's outcome.\n  let theta (random-float 360)\n\n  ; PHASE 2: convert velocities to theta-based vector representation\n\n  ; now convert my velocity from speed/heading representation to components\n  ; along theta and perpendicular to theta\n  let v1t (speed * cos (theta - heading))\n  let v1l (speed * sin (theta - heading))\n\n  ;; do the same for other-particles\n  let v2t (speed2 * cos (theta - heading2))\n  let v2l (speed2 * sin (theta - heading2))\n\n  ; PHASE 3: manipulate vectors to implement collision\n\n  ; compute the velocity of the system's center of mass along theta\n  let vcm (((mass * v1t) + (mass2 * v2t)) / (mass + mass2) )\n\n  ; now compute the new velocity for each particles along direction theta.\n  ; velocity perpendicular to theta is unaffected by a collision along theta,\n  ; so the next two lines actually implement the collision itself, in the\n  ; sense that the effects of the collision are exactly the following changes\n  ; in particles velocity.\n  set v1t (2 * vcm - v1t)\n  set v2t (2 * vcm - v2t)\n\n  ; PHASE 4: convert back to normal speed/heading\n\n  ; now convert my velocity vector into my new speed and heading\n  set speed sqrt ((v1t ^ 2) + (v1l ^ 2))\n  set energy (0.5 * mass * speed ^ 2)\n  ; if the magnitude of the velocity vector is 0, atan is undefined. but\n  ; speed will be 0, so heading is irrelevant anyway. therefore, in that\n  ; case we'll just leave it unmodified.\n  if v1l != 0 or v1t != 0 [ set heading (theta - (atan v1l v1t)) ]\n\n  ;; and do the same for other-particle\n  ask other-particles [\n    set speed sqrt ((v2t ^ 2) + (v2l ^ 2))\n    set energy (0.5 * mass * (speed ^ 2))\n    if v2l != 0 or v2t != 0 [ set heading (theta - (atan v2l v2t)) ]\n  ]\nend\n\nto stick-with [ other-particles ] ;; particles procedure\n  ; PHASE 1: initial setup\n\n  ; for convenience, grab  quantities from other-particles\n  let mass2 [ mass ] of other-particles\n  let speed2 [ speed ] of other-particles\n  let heading2 [ heading ] of other-particles\n  let heading1 heading\n  let speed1 speed\n\n  ; since particles are modeled as zero-size points, theta isn't meaningfully\n  ; defined. we can assign it randomly without affecting the model's outcome.\n  let theta (random-float 360)\n\n  ; PHASE 2: convert velocities to theta-based vector representation\n\n  ; now convert my velocity from speed/heading representation to components\n  ; along theta and perpendicular to theta\n  let v1t (((speed ) * cos (theta - (heading ))))\n  let v1l (((speed ) * sin (theta - (heading ))))\n\n  ;; do the same for other-particles\n  let v2t (((speed2) * cos (theta - (heading2))))\n  let v2l (((speed2 - speed1) * sin (theta - (heading2))))\n  \n  let vrt (v1t + v2t) / 2\n  let vrl (v1l + v2l) / 2\n  \n\n  ; PHASE 3: manipulate vectors to implement collision\n\n  ; compute the velocity of the system's center of mass along theta\n  let vcm (((mass * v1t) + (mass2 * v2t)) / (mass + mass2) )\n\n  ; now compute the new velocity for each particles along direction theta.\n  ; velocity perpendicular to theta is unaffected by a collision along theta,\n  ; so the next two lines actually implement the collision itself, in the\n  ; sense that the effects of the collision are exactly the following changes\n  ; in particles velocity.\n  set v1t (2 * vcm - v1t)\n  set v2t (2 * vcm - v2t)\n\n  ; PHASE 4: convert back to normal speed/heading\n\n  ; now convert my velocity vector into my new speed and heading\n  set speed sqrt ((vrt ^ 2) + (vrl ^ 2))\n  set speed1 speed\n  set energy (0.5 * mass * speed ^ 2)\n  ; if the magnitude of the velocity vector is 0, atan is undefined. but\n  ; speed will be 0, so heading is irrelevant anyway. therefore, in that\n  ; case we'll just leave it unmodified.\n  if vrl != 0 or vrt != 0 [ set heading (theta - (atan vrl vrt)) ]\n  set heading2 heading\n  ;; and do the same for other-particle\n  ask other-particles [\n    set speed speed1\n    set energy (0.5 * mass * (speed ^ 2))\n    if v2l != 0 or v2t != 0 [ set heading heading2 ]\n  ]\nend\n\n\n\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;  mouse interaction procedures\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n\nto mouse-action\n let snap-xcor 0\n let snap-ycor 0\n let orig-xcor 0\n let orig-ycor 0\n let eraser-window-walls nobody\n let eraser-window-particles nobody\n\n  ifelse mouse-down? [\n    set orig-xcor mouse-xcor\n    set orig-ycor mouse-ycor\n    set snap-xcor round orig-xcor\n    set snap-ycor round orig-ycor\n\n    ask patches with [ pxcor = snap-xcor and pycor = snap-ycor ] [\n      set eraser-window-walls walls-on neighbors\n      set eraser-window-walls eraser-window-walls with [ not pressure? ]\n      set eraser-window-particles particles-on neighbors\n\n      if mouse-interaction = \"draw basic wall\" [\n        ask walls-here [ die ]\n        sprout 1 [\n          set breed walls set color gray\n          initialize-this-wall\n        ]\n      ]\n\n      if mouse-interaction = \"draw red removable wall\"  [\n        set toggle-red-state \"open\"\n        toggle-red-wall\n        ask walls-here [ die ]\n        sprout 1 [\n          set breed walls set color red\n          initialize-this-wall set valve-1? true\n        ]\n      ]\n\n      if mouse-interaction = \"draw green removable wall\" [\n        set toggle-green-state \"open\"\n        toggle-green-wall\n        ask walls-here [ die ]\n        sprout 1 [\n          set breed walls set color 55\n          initialize-this-wall set valve-2? true\n        ]\n      ]\n\n      if mouse-interaction = \"big eraser\" [\n        ask erasers [\n          set hidden? false\n          set shape \"eraser\"\n          setxy orig-xcor orig-ycor\n        ]\n        ask eraser-window-walls [ die ]\n        ask eraser-window-particles [ die ]\n      ]\n\n      if mouse-interaction = \"add purple particles\" or mouse-interaction = \"add green particles\"\n        or mouse-interaction = \"add orange particles\" [\n\n        ask erasers [\n          set hidden? false\n          set shape \"spray paint\"\n          setxy orig-xcor orig-ycor\n        ]\n        sprout particles-to-add [\n          set breed particles\n          setup-particles\n          jump random-float 2\n          if mouse-interaction = \"add purple particles\" [ set color-type 115 color-particle-and-link ]\n          if mouse-interaction = \"add orange particles\" [ set color-type 25 color-particle-and-link ]\n          if mouse-interaction = \"add green particles\" [ set color-type 55  color-particle-and-link ]\n          apply-speed-visualization\n        ]\n      ]\n\n      if mouse-interaction = \"paint particles purple\"\n        or mouse-interaction = \"paint particles orange\"\n        or mouse-interaction = \"paint particles green\" [\n\n        ask erasers [\n          set hidden? false\n          set shape \"spray paint\"\n          setxy orig-xcor orig-ycor\n        ]\n        ask eraser-window-particles [\n          if mouse-interaction = \"paint particles purple\"  [ set color-type 115 color-particle-and-link ]\n          if mouse-interaction = \"paint particles orange\" [ set color-type 25 color-particle-and-link ]\n          if mouse-interaction = \"paint particles green\" [ set  color-type 55 color-particle-and-link ]\n          apply-speed-visualization\n        ]\n      ]\n\n      if mouse-interaction = \"heat patch\"  [\n\n        ask erasers [\n          set hidden? false\n          set shape \"spray paint\"\n          setxy orig-xcor orig-ycor\n        ]\n        ask eraser-window-particles [\n          set energy (energy * 1.1)\n          set energy limited-particle-energy\n          ;ask patch orig-xcor orig-ycor [set pcolor red]\n          set speed speed-from-energy\n          apply-speed-visualization\n        ]\n      ]\n\n      if mouse-interaction = \"slow down particles\" [\n        ask erasers [\n          set hidden? false\n          set shape \"spray paint\"\n          setxy orig-xcor orig-ycor\n        ]\n        ask eraser-window-particles [\n          set energy (energy / 1.1)\n          set energy limited-particle-energy\n          set speed speed-from-energy\n          apply-speed-visualization\n        ]\n      ]\n    ]\n    ask particles with [ any? walls-here ] [ remove-from-walls ] ; deal with any walls drawn on top of particles\n  ][\n    ask erasers [ set hidden? true ]\n  ]\nend\n\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;; particle speed and flash visualization procedures\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n\nto apply-flash-visualization\n  set size (size * .95)\n  if (ticks - birthday > 0.4)  [ die ]\nend\n\nto apply-speed-visualization\n  if visualize-speed? = \"arrows\" [ scale-arrowheads ]\n  if visualize-speed? = \"different shades\" [ recolorshade ]\n  if visualize-speed? = \"none\" [ recolornone ]\nend\n\nto color-particle-and-link\n  let this-link my-out-links\n  let this-color-type color-type\n  set color this-color-type\n  ask this-link [ set color this-color-type ]\nend\n\nto scale-arrowheads\n  let this-xcor xcor\n  let this-ycor ycor\n  let this-speed speed\n  let this-heading heading\n  let this-arrowhead out-link-neighbors\n  let this-link my-out-links\n  ask this-link [ set hidden? false ]\n  ask this-arrowhead [\n    set xcor this-xcor\n    set ycor this-ycor\n    set heading this-heading\n    fd .5 + this-speed / 3\n  ]\nend\n\n\n\nto recolorshade\n   let this-link my-out-links\n   ask this-link [ set hidden? true ]\n   ifelse speed < 27 [\n     set color color-type - 3 + speed / 3\n   ][\n     set color color-type + 4.999\n   ]\nend\n\nto recolornone\n  let this-link my-out-links\n  ask this-link [ set hidden? true ]\n  set color color-type\nend\n\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;  initialization procedures\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n\nto make-box\n  ask patches with [ (pycor = min-pycor or pycor = max-pycor or pxcor = min-pxcor or pxcor = max-pxcor) ] [\n    sprout 1 [\n      set breed walls set color yellow initialize-this-wall set pressure? true\n    ]\n  ]\nend\n\nto initialize-this-wall\n  set valve-1? false\n  set valve-2? false\n  set pressure? false\nend\n\nto make-particles\n  create-particles initial-purple-particles [\n    set color-type 115\n    setup-particles\n    random-position\n    set collided? false\n  ]\n  create-particles intitial-green-particles [\n    set color-type 55\n    setup-particles\n    random-position\n    set collided? false\n    \n    \n  ]\nend\n\nto setup-particles  ; particles procedure\n  set shape \"circle\"\n  set candidate nobody\n  set size particle-size\n  if (color-type = 115) [set energy initial-purple-particle-speed]\n  if (color-type = 55) [set energy initial-green-particle-speed]\n  ;set color-type 115\n  set color color-type\n  set mass (10)  ; atomic masses of oxygen atoms\n  hatch 1 [\n    set breed arrowheads\n    set hidden? true\n    create-link-from myself [ tie ]\n  ]\n  set speed speed-from-energy\n  set last-collision nobody\nend\n\n\n; Place particles at random, but they must not be placed on top of wall atoms.\n; This procedure takes into account the fact that wall molecules could have two possible arrangements,\n; i.e. high-surface area ot low-surface area.\nto random-position ;; particles procedure\n  let open-patches nobody\n  let open-patch nobody\n  set open-patches patches with [not any? turtles-here and pxcor != max-pxcor and pxcor != min-pxcor and pycor != min-pycor and pycor != max-pycor]\n  set open-patch one-of open-patches\n\n  ; Reuven added the following \"if\" so that we can get through setup without a runtime error.\n  if open-patch = nobody [\n    user-message \"No open patches found.  Exiting.\"\n    stop\n  ]\n\n  setxy ([ pxcor ] of open-patch) ([ pycor ] of open-patch)\nend\n\n\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;; wall penetration error handling procedure\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n; if particles actually end up within the wall\n\nto remove-from-walls\n  let this-wall walls-here with [ not hidden? ]\n\n  if count this-wall != 0 [\n    let available-patches patches with [ not any? walls-here ]\n    let closest-patch nobody\n    if (any? available-patches) [\n      set closest-patch min-one-of available-patches [ distance myself ]\n      set heading towards closest-patch\n      setxy ([ pxcor ] of closest-patch)  ([ pycor ] of closest-patch)\n    ]\n  ]\nend\n\n\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GRAPHS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\nto do-plotting\n\n  set-current-plot \"Temperature of gases\"\n\n  if any? particles with [ color-type = 55 ] [\n    set-current-plot-pen \"green\"\n    plotxy ticks avg-energy-green\n  ]\n  if any? particles with [ color-type = 25 ] [\n    set-current-plot-pen \"orange\"\n    plotxy ticks avg-energy-orange\n  ]\n  if any? particles with [color-type = 115] [\n    set-current-plot-pen \"purple\"\n    plotxy ticks avg-energy-purple\n  ]\nend\n\n\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;REPORTERS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n\nto-report speed-from-energy\n  report sqrt (2 * energy / mass)\nend\n\nto-report energy-from-speed\n  report (mass * speed * speed / 2)\nend\n\nto-report limited-particle-energy\n  let limited-energy energy\n  if limited-energy > max-particle-energy [ set limited-energy max-particle-energy ]\n  if limited-energy < min-particle-energy [ set limited-energy min-particle-energy ]\n  report limited-energy\nend\n\nto setspeed [stuff ]\n  if stuff = \"stop\" [set speed 0 set energy 0 ask candidate [set speed 0 set energy 0]]\n  if stuff = \"same as other\" [set speed [speed] of candidate]\n  if stuff = \"faster\" [set speed speed + 1 set energy energy + 1 ask candidate [set speed speed + 1 set energy energy + 1]]\n  if stuff = \"slower\" [set speed speed - 1 set energy energy - 1 ask candidate [set speed speed - 1 set energy energy - 1]]\n  ;\"stop\";\"same as other\";\"faster\";\"slower\"\nend\n\nto-report setdirection [stuff ]\n  let return 0\n  if stuff = \"backwards\" [ set heading heading + 180 ask candidate [set heading heading + 180] ]\n  if stuff = \"same as other\" [set heading [heading] of candidate]\n    if stuff = \"random\" [ set heading random 360 ask candidate [set heading random 360] ]\n  report return\n  ;\"stop\";\"same as other\";\"faster\";\"slower\"\nend\n\n;to-report average-energy\n;  return 0\n;  set return  mean [energy] of turtles\n;  report return\n;end\n\n\n\n\n\n\n;;;; other model ;;;;\n\n\n\nto setup-nl\n  clear-all\n  set particle-size 1.0\n  ;create-atoms 1 \n  ; set stiffness 3.0\n  set vibrate-particles? true\n  set empty-space 1\n  set #atoms 3\n  set slide-step 20\n  set friction-in-medium 0\n  set distance-of-blue-squares-from-sound-source 1\n  set dark-friction-in-medium 6\n  set length-of-simulation 499\n  set red-detector-size 1\n  set blue-detector-size 1\n  set atom-batch-twist false\n  set membrane-surface \"\"\n  set membrane-surface \"rigid\"\n  set particle-shape \"circle\"\n  set speaker-on? false\n  set speaker-visible? false\n  set particles? false\n  set hearer? false\n  \n  setup-springs\n\n  \ncreate-graphics-detectors 1 [set color black setxy -3.5 0 set size 6 set shape \"detector\" set hidden? true]\n\n  ask patches [set detector? false set pcolor white]\n  ask patches with [(pxcor <= max-pxcor  - 1) and pycor = 0]\n    [ sprout 1\n        [ set breed arrows\n         ; set color [0 255 0 150]\n           set hidden? true\n           set edge? false\n           set driver? false\n           set size 1.1\n          if (( pxcor >= (min-pxcor + 2) and pxcor <= min-pxcor + 3) and pxcor != max-pxcor and speaker-visible?)\n             [set shape \"rectangle\" set color orange set hidden? false set size 3.6\n               if (speaker-on?) [set driver? true]\n           ]\n          set x xcor\n          set y ycor\n          set z 0\n          set velocity 0\n          ]\n        ]\n  \n  if (hearer?)\n  [ask patch 17 0\n  \t[sprout 1\n  \t  [ set shape \"person-with-ears\" set size 4 set color gray]\n  \t]\n  ]\n\n  if (particles?)\n  [ask patches with [(pxcor <= max-pxcor  - 1) and pycor = 0][\n     sprout 1\n     [\n       set breed dark-particles\n       set edge? false\n       set driver? false\n\n       set x xcor\n       set y ycor\n       set z 0\n\n       set velocity 0\n       set hidden? true\n      ; repack-new\n     ]\n   ]\n  ]\n\n   ask patches with [(pxcor = max-pxcor) and pycor >= (min-pycor + empty-space) and pycor <= (max-pycor - empty-space)][\n     sprout 1\n     [\n       set breed boundaries\n       set edge? false\n       set driver? false\n       set color violet\n       set x xcor\n       set y ycor\n       set z 0\n       set velocity 0\n       set hidden? true\n     ;  repack-new\n     ]\n   ]\n\n  ask arrows\n    [\n      let these-particle-neighbors arrows-on neighbors4\n      let these-boundary-neighbors boundaries-on neighbors4\n      let myxcor x\n    ;  if (driver?) [set hidden? false]\n    ;  set shape \"square\"\n    ;  set size 2\n\n    ifelse myxcor = (max-pxcor - 1) [set neighbor-particles (turtle-set these-particle-neighbors these-boundary-neighbors) with [x != myxcor] ]\n      [  set neighbor-particles these-particle-neighbors with [x != myxcor] ]\n     ]\n\n    ask dark-particles\n    [\n      let these-dark-neighbors dark-particles-on neighbors4\n      let these-boundary-neighbors boundaries-on neighbors4\n      let myxcor x\n      ifelse myxcor = (max-pxcor - 1) [ set neighbor-particles (turtle-set these-dark-neighbors these-boundary-neighbors) with [x != myxcor]]\n      [ set neighbor-particles these-dark-neighbors with [x != myxcor]  ]\n   ]\n\n   ask boundaries\n    [\n      let these-dark-neighbors dark-particles-on neighbors4\n      let these-particle-neighbors arrows-on neighbors4\n      let myxcor x\n      set neighbor-particles (turtle-set these-dark-neighbors these-particle-neighbors) with [x != myxcor]\n     ]\n\n    ask patches [\n     let min-xpos -5\n\n      if (pxcor >= (min-xpos + distance-of-blue-squares-from-sound-source) and pxcor <= (min-xpos + distance-of-blue-squares-from-sound-source + 1)  ) and (abs pycor < 2 )\n      [set detector? true]\n\n\n    ]\n\n  ;  ask patches [\n  ;  sprout 1 [set breed grids set shape \"grid\" set color [255 255 255 55] stamp die]\n  ;  ]\n  if (particles?) [make-atoms-new]\n   ;   ask atoms [\n     ;  ifelse show-particles-in-medium?\n   ;    [set hidden? not show-particles-in-medium?]\n  ;     [set hidden? not show-particles-in-medium?]\n  ;    ]\n  repack-new\n ; calculate-detector-values\n;\n\n  reset-ticks\nend\n\n\n\n\n\n\n\n\nto make-atoms-new\n   let counter-x 0\n   let min-x (min-pxcor + 5)\n   let x-offset -.45\n   let x-offset-2 0\n   let x-offset-3 0\n   let counter-y 0\n   let min-y -1.4\n   let closest-particle nobody\n\n   repeat 3 [\n   repeat 2 [\n\n   repeat 2 [\n\n     repeat (abs (min-x * 2) + 4) [\n       create-atoms 1 [set breed atoms set size (.45 * particle-size) set color [50 175 50] set shape \"offset-circle\" set hidden? false\n            setxy (min-x + counter-x + x-offset + x-offset-2 + x-offset-3 ) (min-y + counter-y)\n            set offset-distance (pxcor - xcor)\n            rt random 360\n            set color [50 175 50]\n            set closest-particle min-one-of arrows [distance myself]\n            create-link-from closest-particle [tie set hidden? true]\n            set x xcor\n            set y ycor\n            set tracking? false\n       ]\n       set counter-x counter-x + 1\n\n     ]\n     set counter-x 0\n     set x-offset x-offset + 0.5\n     set counter-y counter-y + 0.25\n   ]\n     set x-offset -.45\n     set x-offset-2 x-offset-2 + (0.052)\n   ]\n\n     set x-offset -.45\n    ; set x-offset-2  0\n     set x-offset-3 x-offset-3 - (0.16)\n\n   ]\n\n\n\nask arrows with [not edge? and not driver?] [set hidden? true]\nend\n\nto repack  ;; turtle procedure'\n  let my-xcor 0\n ask (turtle-set arrows boundaries dark-particles) [\n  if not edge?\n    [\n      setxy x y\n      set heading -90\n\n      fd z / slide-step\n\n      ]\n   ]\nend\n\nto repack-new  ;; turtle procedure'\n  let my-xcor 0\n\n  ask (turtle-set arrows boundaries dark-particles) [\n  if not edge?\n    [\n      setxy x y\n      set heading -90\n      fd z / slide-step\n      ]\n   ]\n\n ask (arrows) [\n  if not edge?\n    [\n\n      let this-z z\n    ;  fd z / slide-step\n      if breed = arrows and any? link-neighbors [\n        set my-xcor x\n        let left-neighbor-particle  one-of neighbor-particles with [x < my-xcor]\n        let right-neighbor-particle one-of neighbor-particles with [x > my-xcor]\n        let z-left [z] of left-neighbor-particle\n        let z-right[z] of right-neighbor-particle\n\n        ask link-neighbors [\n          set xcor x\n          set ycor y\n          set heading -90\n          fd this-z / slide-step\n          if offset-distance < 0 [fd offset-distance *  (z-left  - this-z) / slide-step]\n          if offset-distance > 0 [fd offset-distance *  (this-z - z-right) / slide-step]\n        ;  if wiggle? [rt random 360]\n        ]\n\n       ]  ;ask atoms with []\n      ]\n   ]\n\nend\n\n\nto check-driver\n\n    ask arrows\n\n    [\n       let driver-vibration-frequency vibration-frequency * 30\n      ifelse driver?\n      [ set z (vibration-amplitude * -1 * (sin (0.1 * driver-vibration-frequency * ticks))) ]\n          ; if (0.1 * driver-vibration-frequency * ticks) / 360 >= #-of-repeated-vibrations [set z 0] ]\n        [ set z (z + velocity)]\n     ; set hidden? true\n     ]\n  ask boundaries      [ set z (z + velocity)]\n  ask dark-particles  [ set z (z + velocity)]\nend\n\nto propagate-across-particles-nt\n  ask arrows with [not edge?]\n  [ propagate-across-particles friction-in-medium ]\n  ask boundaries\n    [ propagate-across-particles friction-in-medium]\n  ask dark-particles\n    [ propagate-across-particles dark-friction-in-medium]\nend\n\nto propagate-across-particles-turtles\n  if (breed = arrows and not edge?)\n  [ propagate-across-particles friction-in-medium]\n  if (breed = boundaries)\n  [ propagate-across-particles friction-in-medium]\n  if (breed = dark-particles)\n  [ propagate-across-particles dark-friction-in-medium]\n  \nend\n  \n\nto go-nl\n  ;if (ticks >  length-of-simulation) [stop]\n  \n  ;propagate-across-particles-nt\n\n\n  check-driver\n\n  check-mouse-click\n\n  repack-new\n  ;calculate-detector-values\n\n  tick\n  go-springs\nend\n\n\n\nto check-mouse-click\n  if mouse-down? and mouse-inside? [\n    let this-mouse-xcor mouse-xcor\n    let this-mouse-ycor mouse-ycor\n\n    let atoms-near-mouse atoms with [sqrt (((xcor - mouse-xcor) ^ 2) + ((ycor - mouse-ycor) ^ 2)) <= .25  ]\n    ask atoms [set tracking? false set color [50 175 50]]\n    if any? atoms-near-mouse [ask atoms-near-mouse [set tracking? true]]\n  ]\n\n\n    if mouse-inside?\n      [ask atoms with [tracking? = true][set color red] ]\n\nend\n\nto propagate-across-particles [this-friction-in-medium]  ;; turtle procedure -- propagates the wave from neighboring particles\n\n  set velocity (velocity +  (stiffness * 0.01) *  (sum [z] of neighbor-particles -  2 * z))\n  set velocity (((1000 - this-friction-in-medium) / 1000) * velocity)\nend\n\n\nto-report #-atoms-at-detector\n  let p 0\n  ifelse show-detector-region?\n  [ask patches with [pxcor >= -4 and pxcor <= -3] [set pcolor red + 4]\n     set p (count atoms with [pxcor >= -4 and pxcor <= -3] )]\n      [set p 0 ask patches with [pxcor >= -4 and pxcor <= -3] [set pcolor 9.9]]\n  report p\nend\n\nto-report #-atoms-at-ear\n  let p (count atoms with [pxcor >= 15 and pxcor <= 16])\n  report p\nend\n\nto go-springs\n  ask turtles\n  [\n    propagate-across-particles-turtles\n  ]\nend\n\nto setup-springs\n  set vibration-amplitude (21)\n  set vibration-frequency (2)\n  set stiffness (\"10\")\n  set friction-in-medium (\"0\")\n  set speaker-visible? true\n  set speaker-on? true\n  set particles? true\n  set hearer? true\nend\n@#$#@#$#@\nGRAPHICS-WINDOW\n320\n10\n716\n406\n-1\n-1\n12\n1\n10\n1\n1\n1\n0\n0\n0\n1\n-16\n16\n-16\n16\n1\n1\n1\nticks\n30\n\nBUTTON\n90\n10\n165\n43\ngo/stop\ngo\nT\n1\nT\nOBSERVER\nNIL\nNIL\nNIL\nNIL\n0\n\nBUTTON\n10\n10\n85\n43\nNIL\nsetup-the-stuff\nNIL\n1\nT\nOBSERVER\nNIL\nNIL\nNIL\nNIL\n1\n\nSLIDER\n10\n45\n315\n78\ninitial-purple-particles\ninitial-purple-particles\n0\n100\n92\n1\n1\nNIL\nHORIZONTAL\n\nSLIDER\n10\n85\n315\n118\ninitial-purple-particle-speed\ninitial-purple-particle-speed\n1\n1000\n32\n1\n1\nNIL\nHORIZONTAL\n\nPLOT\n720\n0\n950\n400\nTemperature of gases\ntime\ntemp.\n0\n10\n0\n200\ntrue\ntrue\n\"\" \"\"\nPENS\n\"orange\" 1 0 -955883 true \"\" \"plot avg-energy-orange\"\n\"purple\" 1 0 -8630108 true \"\" \"plot avg-energy-purple\"\n\"green\" 1 0 -10899396 true \"\" \"plot avg-energy-green\"\n\nCHOOSER\n165\n200\n312\n245\nmouse-interaction\nmouse-interaction\n\"add purple particles\" \"add green particles\" \"add orange particles\" \"heat patch\" \"slow down particles\" \"draw basic wall\" \"draw red removable wall\" \"draw green removable wall\" \"big eraser\" \"paint particles purple\" \"paint particles green\" \"paint particles orange\"\n3\n\nSWITCH\n170\n10\n314\n43\nshow-wall-hits?\nshow-wall-hits?\n0\n1\n-1000\n\nCHOOSER\n10\n200\n160\n245\nvisualize-speed?\nvisualize-speed?\n\"different shades\" \"arrows\"\n0\n\nSLIDER\n10\n120\n310\n153\nintitial-green-particles\nintitial-green-particles\n0\n100\n0\n1\n1\nNIL\nHORIZONTAL\n\nSLIDER\n10\n160\n310\n193\ninitial-green-particle-speed\ninitial-green-particle-speed\n0\n1000\n1\n1\n1\nNIL\nHORIZONTAL\n\nSWITCH\n10\n260\n234\n293\nshow-detector-region?\nshow-detector-region?\n1\n1\n-1000\n@#$#@#$#@\n## WHAT IS IT?\n\nThis model supports a drawing style interface for \"sketching\" up representations of new systems to explore related to gas behavior and gas particles.  This model is part of the \"Connected Chemistry\" curriculum http://ccl.northwestern.edu/curriculum/ConnectedChemistry/ which explores the behavior of gases.\n\nMost of the models in the Connected Chemistry curriculum use the same basic rules for simulating the behavior of gases.  Each model highlights different features of how gas behavior is related to gas particle behavior.\n\nIn all of the models, gas particles are assumed to move and to collide, both with each other and with objects such as walls.\n\nIn this model, particles can be added, color coded, and sped up or slowed down, by drawing with the mouse cursor in the WORLD & VIEW.  Also, additional types of removable and replaceable walls can be added to the WORLD.\n\nThis model enables students to draw a model of a real world system and then test that model.  A wide range of real world systems can be modeled with this simple interface (e.g. diffusion of perfume from an uncapped container, hot gas mixed with a cold gas, mixtures of gases).\n\n## HOW IT WORKS\n\nThe particles are modeled as hard balls with no internal energy except that which is due to their motion.  Collisions between particles are elastic.  Collisions with the wall are not.\n\nThe exact way two particles collide is as follows:\n1. A particle moves in a straight line without changing its speed, unless it collides with another particle or bounces off the wall.\n2. Two particles \"collide\" if they find themselves on the same patch. In this model, two turtles are aimed so that they will collide at the origin.\n3. An angle of collision for the particles is chosen, as if they were two solid balls that hit, and this angle describes the direction of the line connecting their centers.\n4. The particles exchange momentum and energy only along this line, conforming to the conservation of momentum and energy for elastic collisions.\n5. Each particle is assigned its new speed, heading and energy.\n\nAs the walls of the box are heated, the sides of the walls will change color from a deep red (cool) to a bright red, to pink to a pale pink white (hot).  The walls contain a constant heat value throughout the simulation.\n\nThe exact way particles gain energy from the walls of the box is as follows:\n1. Particles check their state of energy (kinetic).\n2. They hit or bounce off the wall.\n3. They find wall energy and set their new energy to be the average of their old kinetic energy and the wall energy.\n4. They change their speed and direction after the wall hit.\n\n## HOW TO USE IT\n\nButtons:\nSETUP - sets up the initial conditions set on the sliders.\nGO/STOP - runs and stops the model.\nMOUSE INTERACTION - when this is set to \"none - let the particles interact\" the particles will move and interact with each other and the surroundings.  When set to any other value you can then click in the WORLD & VIEW to paint, erase, color, or add various objects and properties.\n\nSliders:\nINITIAL-#-PARTICLES - sets the number of gas particles in the box when the simulation starts.\nINITIAL-GAS-TEMPERATURE sets the initial temperature of the gas.\n\nSwitches:\nSHOW-WALL-HITS? turn visualization of when particles hits the walls (as flashes) on or off\n\nChoosers:\nVISUALIZE-SPEED? allows you to visualize particle speeds.  For example, selecting \"arrows\", creates a representation of each particle velocity using a scalar arrow.  Selecting \"shades\" creates representation of each particle speed using a brighter (faster) or darker (slower) shade of the particle's color.\n\nMOUSE-INTERACTION  sets the type interaction the user can do with the mouse in the WORLD & VIEW.  Possible settings include:\n\"none - let the particles interact\" - particles move about\n\"draw basic wall\" - adds a gray wall under the mouse cursor\n\"draw red removable wall\" - adds a red wall under the mouse cursor which can be alternatively removed and replaced (like a valve) using the REMOVE/REPLACE RED WALL.\n\"draw green removable wall\" - adds a green wall under the mouse cursor which can be alternatively removed and replaced (like a valve) using the REMOVE/REPLACE GREEN WALL.\n\"big eraser\" - erases all objects (except the yellow box boundary walls) under the mouse cursor.\n\"slow down particles\" - increase the current speed of the particles by 10%.\n\"speed up particles\" - reduces the current speed of the particles by 10%.\n\"paint particles green\" - recolors the particles under the mouse cursor green (other settings include orange and purple)\n\"add green particles\" - adds a couple of new particles under the mouse cursor (other settings include orange and purple)\n\nPlots:\n- 1: TEMPERATURE OF GASES VS. TIME: plots the temperature of the different gases in the model, as indicated by their color (orange particles, green particles, and purple particles)\n\n## THINGS TO NOTICE\n\nThe mouse interaction can be used while the model is running as well as when it is stopped.\n\n## THINGS TO TRY\n\nCreate a model of how odors move throughout a room.  Why do some people smell the odor before others?  Does the layout of furniture, large objects, and walls in the room effect the movement of the odor?  How about the temperature of the air in the room?\n\nCreate a model of diffusion of a perfume from a closed container.  How would you represent the different gases (the perfume and the surrounding air)?  What shape will the container be?  How will you model a removable cap or lid?\n\nCreate a model of room filled with cold air and a different room filled with warm air.  How will represent these different rooms of air?  What could you add to show what happens when they mix?\n\nCreate a model of heat transfer that shows what happens to the energy of one very fast moving gas particle when it hits a bunch of very slow moving gas particles.  What does this show happening to the energy of the initial gas particles?\n\n## RELATED MODELS\n\nSee GasLab Models\nSee other Connected Chemistry models.\n\n## CREDITS AND REFERENCES\n\nThis model is part of the Connected Chemistry curriculum.  See http://ccl.northwestern.edu/curriculum/chemistry/.\n\nWe would like to thank Sharona Levy and Michael Novak for their substantial contributions to this model.\n\n## HOW TO CITE\n\nIf you mention this model or the NetLogo software in a publication, we ask that you include the citations below.\n\nFor the model itself:\n\n* Wilensky, U. (2006).  NetLogo Connected Chemistry 8 Gas Particle Sandbox model.  http://ccl.northwestern.edu/netlogo/models/ConnectedChemistry8GasParticleSandbox.  Center for Connected Learning and Computer-Based Modeling, Northwestern University, Evanston, IL.\n\nPlease cite the NetLogo software as:\n\n* Wilensky, U. (1999). NetLogo. http://ccl.northwestern.edu/netlogo/. Center for Connected Learning and Computer-Based Modeling, Northwestern University, Evanston, IL.\n\nTo cite the Connected Chemistry curriculum as a whole, please use:\n\n* Wilensky, U., Levy, S. T., & Novak, M. (2004). Connected Chemistry curriculum. http://ccl.northwestern.edu/curriculum/chemistry/. Center for Connected Learning and Computer-Based Modeling, Northwestern University, Evanston, IL.\n\n## COPYRIGHT AND LICENSE\n\nCopyright 2006 Uri Wilensky.\n\n![CC BY-NC-SA 3.0](http://ccl.northwestern.edu/images/creativecommons/byncsa.png)\n\nThis work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 3.0 License.  To view a copy of this license, visit https://creativecommons.org/licenses/by-nc-sa/3.0/ or send a letter to Creative Commons, 559 Nathan Abbott Way, Stanford, California 94305, USA.\n\nCommercial licenses are also available. To inquire about commercial licenses, please contact Uri Wilensky at uri@northwestern.edu.\n\n<!-- 2006 ConChem -->\n@#$#@#$#@\ndefault\ntrue\n0\nPolygon -7500403 true true 150 5 40 250 150 205 260 250\n\nairplane\ntrue\n0\nPolygon -7500403 true true 150 0 135 15 120 60 120 105 15 165 15 195 120 180 135 240 105 270 120 285 150 270 180 285 210 270 165 240 180 180 285 195 285 165 180 105 180 60 165 15\n\narrow\ntrue\n0\nPolygon -7500403 true true 150 0 0 150 105 150 105 293 195 293 195 150 300 150\n\nbox\nfalse\n0\nPolygon -7500403 true true 150 285 285 225 285 75 150 135\nPolygon -7500403 true true 150 135 15 75 150 15 285 75\nPolygon -7500403 true true 15 75 15 225 150 285 150 135\nLine -16777216 false 150 285 150 135\nLine -16777216 false 150 135 15 75\nLine -16777216 false 150 135 285 75\n\nbug\ntrue\n0\nCircle -7500403 true true 96 182 108\nCircle -7500403 true true 110 127 80\nCircle -7500403 true true 110 75 80\nLine -7500403 true 150 100 80 30\nLine -7500403 true 150 100 220 30\n\nbutterfly\ntrue\n0\nPolygon -7500403 true true 150 165 209 199 225 225 225 255 195 270 165 255 150 240\nPolygon -7500403 true true 150 165 89 198 75 225 75 255 105 270 135 255 150 240\nPolygon -7500403 true true 139 148 100 105 55 90 25 90 10 105 10 135 25 180 40 195 85 194 139 163\nPolygon -7500403 true true 162 150 200 105 245 90 275 90 290 105 290 135 275 180 260 195 215 195 162 165\nPolygon -16777216 true false 150 255 135 225 120 150 135 120 150 105 165 120 180 150 165 225\nCircle -16777216 true false 135 90 30\nLine -16777216 false 150 105 195 60\nLine -16777216 false 150 105 105 60\n\ncar\nfalse\n0\nPolygon -7500403 true true 300 180 279 164 261 144 240 135 226 132 213 106 203 84 185 63 159 50 135 50 75 60 0 150 0 165 0 225 300 225 300 180\nCircle -16777216 true false 180 180 90\nCircle -16777216 true false 30 180 90\nPolygon -16777216 true false 162 80 132 78 134 135 209 135 194 105 189 96 180 89\nCircle -7500403 true true 47 195 58\nCircle -7500403 true true 195 195 58\n\ncarbon\ntrue\n0\nCircle -1184463 true false 68 83 134\n\ncarbon-activated\ntrue\n0\nCircle -1184463 true false 68 83 134\nLine -2674135 false 135 90 135 210\n\ncarbon2\ntrue\n0\nCircle -955883 true false 30 45 210\n\ncircle\nfalse\n1\nCircle -2674135 true true 30 30 240\n\ncircle 2\nfalse\n0\nCircle -7500403 true true 16 16 270\nCircle -16777216 true false 46 46 210\n\nclock\ntrue\n0\nCircle -7500403 true true 30 30 240\nPolygon -16777216 true false 150 31 128 75 143 75 143 150 158 150 158 75 173 75\nCircle -16777216 true false 135 135 30\n\nco2\ntrue\n0\nCircle -13791810 true false 83 165 134\nCircle -13791810 true false 83 0 134\nCircle -1184463 true false 83 83 134\n\ncow\nfalse\n0\nPolygon -7500403 true true 200 193 197 249 179 249 177 196 166 187 140 189 93 191 78 179 72 211 49 209 48 181 37 149 25 120 25 89 45 72 103 84 179 75 198 76 252 64 272 81 293 103 285 121 255 121 242 118 224 167\nPolygon -7500403 true true 73 210 86 251 62 249 48 208\nPolygon -7500403 true true 25 114 16 195 9 204 23 213 25 200 39 123\n\neraser\nfalse\n0\nRectangle -7500403 true true 0 0 300 300\n\nface happy\nfalse\n0\nCircle -7500403 true true 8 8 285\nCircle -16777216 true false 60 75 60\nCircle -16777216 true false 180 75 60\nPolygon -16777216 true false 150 255 90 239 62 213 47 191 67 179 90 203 109 218 150 225 192 218 210 203 227 181 251 194 236 217 212 240\n\nface neutral\nfalse\n0\nCircle -7500403 true true 8 7 285\nCircle -16777216 true false 60 75 60\nCircle -16777216 true false 180 75 60\nRectangle -16777216 true false 60 195 240 225\n\nface sad\nfalse\n0\nCircle -7500403 true true 8 8 285\nCircle -16777216 true false 60 75 60\nCircle -16777216 true false 180 75 60\nPolygon -16777216 true false 150 168 90 184 62 210 47 232 67 244 90 220 109 205 150 198 192 205 210 220 227 242 251 229 236 206 212 183\n\nfish\nfalse\n0\nPolygon -1 true false 44 131 21 87 15 86 0 120 15 150 0 180 13 214 20 212 45 166\nPolygon -1 true false 135 195 119 235 95 218 76 210 46 204 60 165\nPolygon -1 true false 75 45 83 77 71 103 86 114 166 78 135 60\nPolygon -7500403 true true 30 136 151 77 226 81 280 119 292 146 292 160 287 170 270 195 195 210 151 212 30 166\nCircle -16777216 true false 215 106 30\n\nflag\nfalse\n0\nRectangle -7500403 true true 60 15 75 300\nPolygon -7500403 true true 90 150 270 90 90 30\nLine -7500403 true 75 135 90 135\nLine -7500403 true 75 45 90 45\n\nflower\nfalse\n0\nPolygon -10899396 true false 135 120 165 165 180 210 180 240 150 300 165 300 195 240 195 195 165 135\nCircle -7500403 true true 85 132 38\nCircle -7500403 true true 130 147 38\nCircle -7500403 true true 192 85 38\nCircle -7500403 true true 85 40 38\nCircle -7500403 true true 177 40 38\nCircle -7500403 true true 177 132 38\nCircle -7500403 true true 70 85 38\nCircle -7500403 true true 130 25 38\nCircle -7500403 true true 96 51 108\nCircle -16777216 true false 113 68 74\nPolygon -10899396 true false 189 233 219 188 249 173 279 188 234 218\nPolygon -10899396 true false 180 255 150 210 105 210 75 240 135 240\n\nheater-a\nfalse\n0\nRectangle -7500403 true true 0 0 300 300\nRectangle -16777216 true false 90 90 210 210\n\nheater-b\nfalse\n0\nRectangle -7500403 true true 0 0 300 300\nRectangle -16777216 true false 30 30 135 135\nRectangle -16777216 true false 165 165 270 270\n\nhex\nfalse\n0\nPolygon -7500403 true true 0 150 75 30 225 30 300 150 225 270 75 270\n\nhex-valve\nfalse\n0\nRectangle -7500403 false true 0 0 300 300\nPolygon -7500403 false true 105 60 45 150 105 240 195 240 255 150 195 60\n\nhouse\nfalse\n0\nRectangle -7500403 true true 45 120 255 285\nRectangle -16777216 true false 120 210 180 285\nPolygon -7500403 true true 15 120 150 15 285 120\nLine -16777216 false 30 120 270 120\n\nleaf\nfalse\n0\nPolygon -7500403 true true 150 210 135 195 120 210 60 210 30 195 60 180 60 165 15 135 30 120 15 105 40 104 45 90 60 90 90 105 105 120 120 120 105 60 120 60 135 30 150 15 165 30 180 60 195 60 180 120 195 120 210 105 240 90 255 90 263 104 285 105 270 120 285 135 240 165 240 180 270 195 240 210 180 210 165 195\nPolygon -7500403 true true 135 195 135 240 120 255 105 255 105 285 135 285 165 240 165 195\n\nline\ntrue\n0\nLine -7500403 true 150 0 150 300\n\nnitrogen\ntrue\n0\nCircle -10899396 true false 83 135 134\nCircle -10899396 true false 83 45 134\n\noxygen\ntrue\n0\nCircle -13791810 true false 83 135 134\nCircle -13791810 true false 83 45 134\n\npentagon\nfalse\n0\nPolygon -7500403 true true 150 15 15 120 60 285 240 285 285 120\n\nperson\nfalse\n0\nCircle -7500403 true true 110 5 80\nPolygon -7500403 true true 105 90 120 195 90 285 105 300 135 300 150 225 165 300 195 300 210 285 180 195 195 90\nRectangle -7500403 true true 127 79 172 94\nPolygon -7500403 true true 195 90 240 150 225 180 165 105\nPolygon -7500403 true true 105 90 60 150 75 180 135 105\n\nplant\nfalse\n0\nRectangle -7500403 true true 135 90 165 300\nPolygon -7500403 true true 135 255 90 210 45 195 75 255 135 285\nPolygon -7500403 true true 165 255 210 210 255 195 225 255 165 285\nPolygon -7500403 true true 135 180 90 135 45 120 75 180 135 210\nPolygon -7500403 true true 165 180 165 210 225 180 255 120 210 135\nPolygon -7500403 true true 135 105 90 60 45 45 75 105 135 135\nPolygon -7500403 true true 165 105 165 135 225 105 255 45 210 60\nPolygon -7500403 true true 135 90 120 45 150 15 180 45 165 90\n\nspray paint\nfalse\n0\nRectangle -7500403 false true 0 0 300 300\nCircle -7500403 false true 75 75 150\n\nsquare\nfalse\n0\nRectangle -7500403 true true 30 30 270 270\n\nsquare 2\nfalse\n0\nRectangle -7500403 true true 30 30 270 270\nRectangle -16777216 true false 60 60 240 240\n\nstar\nfalse\n0\nPolygon -7500403 true true 151 1 185 108 298 108 207 175 242 282 151 216 59 282 94 175 3 108 116 108\n\ntarget\nfalse\n0\nCircle -7500403 true true 0 0 300\nCircle -16777216 true false 30 30 240\nCircle -7500403 true true 60 60 180\nCircle -16777216 true false 90 90 120\nCircle -7500403 true true 120 120 60\n\ntree\nfalse\n0\nCircle -7500403 true true 118 3 94\nRectangle -6459832 true false 120 195 180 300\nCircle -7500403 true true 65 21 108\nCircle -7500403 true true 116 41 127\nCircle -7500403 true true 45 90 120\nCircle -7500403 true true 104 74 152\n\ntriangle\nfalse\n0\nPolygon -7500403 true true 150 30 15 255 285 255\n\ntriangle 2\nfalse\n0\nPolygon -7500403 true true 150 30 15 255 285 255\nPolygon -16777216 true false 151 99 225 223 75 224\n\ntruck\nfalse\n0\nRectangle -7500403 true true 4 45 195 187\nPolygon -7500403 true true 296 193 296 150 259 134 244 104 208 104 207 194\nRectangle -1 true false 195 60 195 105\nPolygon -16777216 true false 238 112 252 141 219 141 218 112\nCircle -16777216 true false 234 174 42\nRectangle -7500403 true true 181 185 214 194\nCircle -16777216 true false 144 174 42\nCircle -16777216 true false 24 174 42\nCircle -7500403 false true 24 174 42\nCircle -7500403 false true 144 174 42\nCircle -7500403 false true 234 174 42\n\nturtle\ntrue\n0\nPolygon -10899396 true false 215 204 240 233 246 254 228 266 215 252 193 210\nPolygon -10899396 true false 195 90 225 75 245 75 260 89 269 108 261 124 240 105 225 105 210 105\nPolygon -10899396 true false 105 90 75 75 55 75 40 89 31 108 39 124 60 105 75 105 90 105\nPolygon -10899396 true false 132 85 134 64 107 51 108 17 150 2 192 18 192 52 169 65 172 87\nPolygon -10899396 true false 85 204 60 233 54 254 72 266 85 252 107 210\nPolygon -7500403 true true 119 75 179 75 209 101 224 135 220 225 175 261 128 261 81 224 74 135 88 99\n\nvalve-1\nfalse\n0\nRectangle -7500403 false true 0 0 300 300\nRectangle -7500403 false true 120 120 180 180\n\nvalve-2\nfalse\n0\nRectangle -7500403 false true 0 0 300 300\nRectangle -7500403 false true 60 120 120 180\nRectangle -7500403 false true 165 120 225 180\n\nvalve-hex\nfalse\n0\nRectangle -7500403 false true 0 0 300 300\nPolygon -7500403 false true 105 60 45 150 105 240 195 240 255 150 195 60\n\nvalve-triangle\nfalse\n0\nRectangle -7500403 true true 0 0 300 300\nPolygon -16777216 true false 150 45 30 240 270 240\n\nvalves\nfalse\n0\nRectangle -7500403 false true 0 0 300 300\n\nwall\nfalse\n0\nRectangle -7500403 true true 0 0 300 300\n\nwheel\nfalse\n0\nCircle -7500403 true true 3 3 294\nCircle -16777216 true false 30 30 240\nLine -7500403 true 150 285 150 15\nLine -7500403 true 15 150 285 150\nCircle -7500403 true true 120 120 60\nLine -7500403 true 216 40 79 269\nLine -7500403 true 40 84 269 221\nLine -7500403 true 40 216 269 79\nLine -7500403 true 84 40 221 269\n\nx\nfalse\n0\nPolygon -7500403 true true 270 75 225 30 30 225 75 270\nPolygon -7500403 true true 30 75 75 30 270 225 225 270\n@#$#@#$#@\nNetLogo 6.1.0\n@#$#@#$#@\n@#$#@#$#@\n@#$#@#$#@\n@#$#@#$#@\n@#$#@#$#@\ndefault\n0\n-0.2 0 0 1\n0 1 1 0\n0.2 0 0 1\nlink direction\ntrue\n0\nLine -7500403 true 150 150 90 180\nLine -7500403 true 150 150 210 180\n@#$#@#$#@\n\n@#$#@#$#@\n","netLogoSettings":{"isVertical":true}}